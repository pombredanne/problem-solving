
Problme I: Mysterious Onslaught

西暦2012年、人類は未知の妙な地球外生命体からの激しい攻撃に晒されていた。人類は敵との長い戦いに疲れ果て、もはや抵抗する力が残っていない。そう、今こそ魔法使いであるあなたの立ち上がるときだ！

敵は n * n の正方形の隊列を組んで飛来するが、このうち何体かは地球に来る過程でひょんなことから既に戦闘不能に戦闘不能に陥ってしまっているようだ。あなたはこの敵を殲滅するために、最上級魔法「みょん」を発明した。この魔法は (軸に平行な) 任意の長方形の攻撃範囲を持つ。あなたが1回「みょん (myon)」と唱えると、その攻撃範囲に含まれる全ての敵は、魔法の圧倒的な攻撃力によって戦闘不能に陥る。しかしこの魔法はどうやら敵の自己修復回路を刺激してしまうようで、既に戦闘不能に陥っている敵がこの魔法を受けた場合、その敵は戦闘能力を取り戻してしまう。あなたがこの戦争に勝利するためには、全ての敵を戦闘不能にしなければならない。

例を示そう。以下のような隊列が飛来したとする。

1 1 1 1 1
1 0 0 0 1
1 0 1 0 1
1 0 0 0 1
1 1 1 1 1

ここで、'0' は戦闘不能の敵、'1' は戦闘可能な敵を表す。
まず、敵全体を対象にして「みょん」と唱えると、次のようになる。

0 0 0 0 0
0 1 1 1 0
0 1 0 1 0
0 1 1 1 0
0 0 0 0 0

さらに、中央の 3 * 3 体を対象にしてもう一度唱える。

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0

ここで残った1体を対象にしてまた唱えると、全ての敵は戦闘不能になる。従ってあなたは「みょんみょんみょん (myonmyonmyon)」と唱えればよいことになるが、これはこのケースに対する最も短い呪文である。

隊列の情報が与えられるので、それらを全て戦闘不能にする最も短い呪文を出力するプログラムを作成して欲しい。

Input
各テストケースの最初の行には、整数 n (1 <= n <= 5) が与えられる。
続く n 行には、隊列の情報が問題文で例示したものと同じ書式で与えられる。
n = 0 のとき、入力は終了する。
戦闘力を保持している敵は少なくとも1体いると仮定してよい。

Output
最も短い呪文を (アルファベットで) 出力せよ。

Sample input
5
1 1 1 1 1
1 0 0 0 1
1 0 1 0 1
1 0 0 0 1
1 1 1 1 1
3
1 1 1
1 1 1
1 1 1
5
1 1 1 1 0
1 1 1 1 0
1 0 0 0 1
0 1 1 1 1
0 1 1 1 1
0

Output for sample input
myonmyonmyon
myon
myonmyon



Problme I: Mysterious Onslaught (En)

In 2012, human beings have been exposed to fierce onslaught of unidentified mysterious extra-terrestrial creatures. We have exhaused because of the long war and can't regist against them any longer. Only you, an excellent wizard, can save us. Yes, it's time to stand up!

The enemies are dispatched to the earth with being aligned like an n * n square. Appearently some of them have already lost their fighting capabilities for some unexpected reason. You have invented a highest grade magic spell 'MYON' to defeat them all. An attack of this magic covers any rectangles (which is parallel to axis). Once you cast a spell "myon," then all the enemies which the magic covers will lose their fighting capabilities because of tremendous power of the magic. However, the magic seems to activate enemies' self-repairing circuit. Therefore if any enemy which have already lost its fighting capability is exposed to the magic, the enemy repossesses its fighting capability. You will win the war when all the enemies will lose their fighting capabilities.

Let me show an example. An array of enemies below have dispatched:

1 1 1 1 1
1 0 0 0 1
1 0 1 0 1
1 0 0 0 1
1 1 1 1 1

Here, '0' means an enemy that doesn't possess fighting capability, and '1' means an enemy that possesses.
First, you cast a spell "myon" with covering all the enemies, which results in;
 
0 0 0 0 0
0 1 1 1 0
0 1 0 1 0
0 1 1 1 0
0 0 0 0 0

Next, cast once again with covering central 3 * 3 enemies.

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0

Now you can defeat them all by casting a spell covers remaining one. Therefore you can cast "myonmyonmyon," which is the shortest spell for this case.

You are given the information of the array. Please write a program that generates the shortest spell that can defeat them all.

Input
The first line of each test case has an integer n (1 <= n <= 5).
Following n lines are information of an array of enemies. The format is same as described in the problem statement.
Input terminates when n = 0.
You may assume that one or more enemy have fighting capability.

Output
Output the shortest spell. 

Sample input
5
1 1 1 1 1
1 0 0 0 1
1 0 1 0 1
1 0 0 0 1
1 1 1 1 1
3
1 1 1
1 1 1
1 1 1
5
1 1 1 1 0
1 1 1 1 0
1 0 0 0 1
0 1 1 1 1
0 1 1 1 1
0

Output for sample input
myonmyonmyon
myon
myonmyon
