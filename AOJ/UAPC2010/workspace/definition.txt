B Task

[概要]

n 個のタスクが与えられる。各タスクの必要日数 di と期限日 li が与えられる。
これらのタスクを１つのマシンが順番に処理する。遂行すべきタスクの順番に制限はない。
全てのタスクが終了する最も最速な日を求めよ。

1 <= n <= 25
1 <= di <= 100
1 <= li <= 365

[解法]

タスクを期限日の順にソートして、終了日を計算する。


D WEB

[概要]

n 個のWEBページの情報が与えられる。 各WEBページには名前 str（文字列）、サイズ h x w、ボタンの数 m、
m 個のボタンの情報が与えられる。各ボタンは長方形で、その左上と右下の座標(x1, y1)(x2, y2)と
クリックされたときに遷移するWEBページの名前targetが与えられる。
続いて、q 個のコマンドが与えられる。コマンドは以下の４通り：

click x y
back
forward
show

click x y は、ページの x, y 座標をクリックし、そこにボタンがあればそのボタンのリンク先にページが移動する。

back はclickで遷移した現在のページの直前のページに戻る。戻るページが無い場合は命令を無視する。

forward は back ボタンによって遷移した現在のページの直前のページに戻る。戻るページが無い場合は命令を無視する。

show コマンドで、現在のページの名前を出力する。

1 <= n <= 100
0 <= m <= 50
1 <= q <= 1000

ブラウザの大きさは固定とする
ブラウザの外（境界を含む）のクリックは無視
（またはブラウザの中にあることを保証する）
セルフボタンはない（ターゲットが自分であるもの）
ボタンは触れない


[解法]

clickでページ遷移がおこった場合は、backボタンによる履歴が消されることになるので、
リストまたはスタックを用いたシミュレーション。clickによるボタン探索は線形探索でもよい。


G CUBE

[概要]

数字が書かれた H x W のグリッド上をサイコロ（1-6の目を持つ通常のもの）を動かす。
サイコロの正方形とグリッドのセルのサイズは同じである。
サイコロが（転がって）隣のセルに移ったとき、接触する部分である移った後のサイコロの底面と
移動したセルに書かれている数字の積だけのコストが発生する。
サイコロをスタートセルからゴールセルに移動するための最小コストを求めよ。
グリッドの情報、サイコロのスタート位置(sr, sc)とゴール位置(gr, gc)が与えられる。
答えはintにおさまると保証する。

1 <= H, W <= 100
0 <= セルに書かれている数字 < 10

[解法]

H x W x 24 の状態空間でダイクストラ


